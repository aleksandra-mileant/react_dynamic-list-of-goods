{"version":3,"sources":["api/goods.ts","components/GoodList.tsx","App.tsx","index.tsx"],"names":["getAll","fetch","then","response","json","get5First","a","goods","sort","b","name","localeCompare","filter","good","id","getRed","color","GoodsList","className","type","map","style","App","state","loadGoods","func","setState","onClick","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"kRAGO,SAASA,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAS,uCAAG,4BAAAC,EAAA,sEACHN,IADG,cACjBO,EADiB,QAGjBC,MAAK,SAACF,EAAGG,GAAJ,OAAUH,EAAEI,KAAKC,cAAcF,EAAEC,SAHrB,kBAKhBH,EAAMK,QAAO,SAAAC,GAAI,OAAKA,EAAKC,IAAM,MALjB,2CAAH,qDAQTC,EAAM,uCAAG,4BAAAT,EAAA,sEACAN,IADA,cACdO,EADc,yBAGbA,EAAMK,QAAO,SAAAC,GAAI,MAAoB,QAAfA,EAAKG,UAHd,2CAAH,qD,OCVNC,EAA6B,SAAC,GAAD,IAAGV,EAAH,EAAGA,MAAH,OACxC,qBAAKW,UAAU,UAAf,SACE,oBAAIC,KAAK,IAAID,UAAU,yBAAvB,SACGX,EAAMa,KAAI,SAAAP,GAAI,OACb,oBAAkBQ,MAAO,CAAEL,MAAOH,EAAKG,OAAvC,SAAiDH,EAAKH,MAA7CG,EAAKC,YCATQ,EAAb,4MACEC,MAAe,CACbhB,MAAO,IAFX,EAKEiB,UALF,uCAKc,WAAOC,GAAP,eAAAnB,EAAA,sEACUmB,IADV,cACJlB,EADI,yBAGH,EAAKmB,SAAS,CAAEnB,WAHb,2CALd,kGAWE,WAAU,IAAD,OACP,OACE,sBAAKW,UAAU,WAAf,UACE,oBACEA,UAAU,+BADZ,mCAKA,sBAAKA,UAAU,UAAf,UACE,wBACEA,UAAU,6BACVC,KAAK,SACLQ,QAAS,kBAAM,EAAKH,UAAUxB,IAHhC,4BAOA,wBACEkB,UAAU,6BACVC,KAAK,SACLQ,QAAS,kBAAM,EAAKH,UAAUnB,IAHhC,gCAOA,wBACEa,UAAU,6BACVC,KAAK,SACLQ,QAAS,kBAAM,EAAKH,UAAUT,IAHhC,+BAQF,cAAC,EAAD,CAAWR,MAAOqB,KAAKL,MAAMhB,eA1CrC,GAAyBsB,IAAMC,WCN/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6b7e808b.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = async () => {\n  const goods = await getAll();\n\n  goods.sort((a, b) => a.name.localeCompare(b.name));\n\n  return goods.filter(good => (good.id <= 5));\n};\n\nexport const getRed = async () => {\n  const goods = await getAll();\n\n  return goods.filter(good => (good.color === 'red'));\n};\n","import React from 'react';\n\ntype Props = {\n  goods: Good[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <div className=\"content\">\n    <ol type=\"1\" className=\"has-text-centered mt-5\">\n      {goods.map(good => (\n        <li key={good.id} style={{ color: good.color }}>{good.name}</li>\n      ))}\n    </ol>\n  </div>\n);\n","import React from 'react';\nimport './App.scss';\n\nimport { getAll, get5First, getRed } from './api/goods';\nimport { GoodsList } from './components/GoodList';\n\ntype State = {\n  goods: Good[],\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    goods: [],\n  };\n\n  loadGoods = async (func: () => Promise<Good[]>) => {\n    const goods = await func();\n\n    return this.setState({ goods });\n  };\n\n  render() {\n    return (\n      <div className=\"box card\">\n        <h1\n          className=\"card-header-title title is-2\"\n        >\n          Dynamic list of Goods\n        </h1>\n        <div className=\"buttons\">\n          <button\n            className=\"button is-success is-light\"\n            type=\"button\"\n            onClick={() => this.loadGoods(getAll)}\n          >\n            Load All goods\n          </button>\n          <button\n            className=\"button is-success is-light\"\n            type=\"button\"\n            onClick={() => this.loadGoods(get5First)}\n          >\n            Load 5 first goods\n          </button>\n          <button\n            className=\"button is-success is-light\"\n            type=\"button\"\n            onClick={() => this.loadGoods(getRed)}\n          >\n            Load red goods\n          </button>\n        </div>\n        <GoodsList goods={this.state.goods} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}